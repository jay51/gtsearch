
$blue: rgba(5, 102, 141, 1);
$green: rgba(2, 195, 154, 1);
$yellow: rgba(240, 243, 189, 1);
$gray: #aaa;
$light-gray: #f4f4f4;

::selection {
    background: $blue;
    color: white;
}

input[type="text"],
input[type="password"] {
    padding: 0.25rem;
    font-size: 1rem;
    font-family: inherit;
    font-weight: inherit;
    border: solid 0.1rem #eee;

    &::placeholder {
        color: $gray;
    }
}

* {
    box-sizing: border-box;
}

html {
    background: white;
    color: #222;

    font-family: sans-serif;
    font-size: 16px;
    font-weight: normal;

    margin: 0;
    padding: 0;
}

h1 {
    font-size: 2rem;
    font-weight: normal;
}

a {
    &, &:active, &:focus, &:hover, &:visited {
        color: $blue;
    }

    text-decoration: none;
    &:hover {
        text-decoration: underline;
    }
}

body {
    margin: 0;
}

html, body, #react-root, main {
    height: 100%;
}

@mixin error {
    background: $yellow;
    font-weight: bold;
    padding: 0.5rem;
}

.error {
    @include error
}

.Button {
    padding: 0.25rem 0.5rem;
    cursor: pointer;
    user-select: none;

    border: solid 0.1rem $light-gray;
    background: $light-gray;
    &:hover {
        background: white;
    }

    &--subtle {
        border-color: white;
        background: white;
        &:hover {
            background: $light-gray;
            border-color: $light-gray;
        }
    }
}

a.Button {
    text-decoration: none !important;
    &:hover {
        color: inherit;
    }
}

@mixin page {
    flex: 1;
    margin: 0.5rem;
    &>* {
        margin: 0.5rem;
    }
}

.SearchPage, .ReposPage, .ErrorPage, .LoginPage, .CreateRepoPage,
.RepoInfoPage {
    @include page;
}

.ReposPage, .LoginPage, .CreateRepoPage, .RepoInfoPage {
    display: flex;
    flex-direction: column;

    .Button {
        flex: 0;
        align-self: left;
    }
}

.ReposPage {
    .RepoLink {
        &--notCloned {
            color: $gray !important;
        }

        &--pullFailed {
            @include error;
        }
    }
}

.SearchPage {
    &__inputWrapper {
        input {
            width: 100%;
        }
    }

    .Result {
        line-height: 1.5;

        display: flex;
        font-family: monospace;
        &:hover {
            background: $light-gray;
            text-decoration: none;
        }

        .file, .line {
            flex-shrink: 0;
            flex-basis: auto;
        }

        .file {
            max-width: 20vw;
            overflow: hidden;
            white-space: nowrap;
            text-overflow: ellipsis;
            color: $gray;
            &:after {
                content: ':';
            }
        }

        .line {
            color: $green;
            margin-right: 0.5rem;
        }

        code {
            flex: 1;
            overflow: hidden;
            white-space: pre;
            text-overflow: ellipsis;
            color: black !important;
        }
    }

    .searchStatus {
        color: $gray;
    }
}

main {
    display: flex;
    flex-direction: column;
}

header, footer {
    .Button {
        padding: 0.75rem 1rem;
        display: inline-block;
    }
}

header {
    flex-shrink: 0;

    display: flex;

    .Header--filler {
        flex: 1;
    }
}

footer {
    text-align: right;

    a {
        font-size: 0.8rem;
        color: $gray;
    }
}
